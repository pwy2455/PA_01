#include <iostream>
#include <fstream>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

char* Sorting(char* text,int size);
int* remove(int* arr,int i,int size);
int* insert(int* arr,int n,int i,int size);
int factorial(int size);
int findK(int** C,int k,int size);
void permutating(int* A,int** B,int** C,int size,char* sorted_text);

int main(){
	
	char T[200];
	fstream file;
	file.open("C:\\Users\\owNer\\Desktop\\inputf1.txt", ios::out | ios::in);
	int x=0;
	while(!file.eof()){
		file.get(T[x]);
		x++;
	}
	file.close();
	int size;
	size=strlen(T);
	size++;
	size=size/2;
	char text[100];
	for(int i=0;i<size;i++){
		text[i]=T[2*i];
	}
	char* sorted_text;
	sorted_text=(char*)malloc(sizeof(char)*(size+1));
	sorted_text=Sorting(text,size);
	
	int* A;
	A=(int*)malloc(sizeof(int)*(size));
	for(int i=1;i<=size;i++){
		A[i-1]=i;
	}
	int** B;
	B=(int**)malloc(sizeof(int*)*(size));
	for(int i=0; i<size; i++){
		B[i]=(int*)malloc(sizeof(int)*(size));
	}
	for(int i=0;i<size;i++){
		for(int j=0;j<size;j++){
			B[i][j]=0;
		}
	}
	int p;
	p=factorial(size);
	int** C;
	C=(int**)malloc(sizeof(int*)*(p));
	for(int i=0; i<p; i++){
		C[i]=(int*)malloc(sizeof(int)*(size+1));
	}
	for(int i=0;i<p;i++){
		for(int j=0;j<size;j++){
			C[i][j]=0;
		}
	}
	for(int i=0;i<p;i++){
		C[i][size]=i+1;
	}
	
	permutating(A,B,C,size,sorted_text);
}

char* Sorting(char* text,int size){
	int i,j,k;
	char* sorted_text;
	sorted_text=(char*)malloc(sizeof(char)*(size+1));
	for(i=0;i<size;i++){
		sorted_text[i]=0;
	}
	for(i=0;i<size;i++){
		k=0;
		for(j=0;j<size;j++){
			if(text[i]>text[j]){
				k++;
			}
		}
		sorted_text[k]=text[i];
	}
	for(i=0;i<size;i++){
		if(sorted_text[i]==0){
			sorted_text[i]=sorted_text[i-1];
		}
	}
	return sorted_text;
}

int* remove(int* arr,int i,int size){
	int* removed_text=(int*)malloc(sizeof(int)*(size));
	int j;
	for(j=0;j<i;j++){
		removed_text[j]=arr[j];
	}
	for(j=i;j<size-1;j++){
		removed_text[j]=arr[j+1];
	}
	int k=0;
	for(j=0;j<size;j++){
		if(arr[j]==0){
			k++;
		}
	}
	removed_text[size-k-1]=0;
	return removed_text;
}

int* insert(int* arr,int n,int i,int size){
	int* inserted_text=(int*)malloc(sizeof(int)*(size));
	int j;
	for(j=0;j<i;j++){
		inserted_text[j]=arr[j];
	}
	for(j=i+1;j<size;j++){
		inserted_text[j]=arr[j-1];
	}
	inserted_text[i]=n;
	return inserted_text;
}

int factorial(int size){
	int p=1,i;
	for(i=1;i<=size;i++){
		p=p*i;
	}
	return p;
}

int findK(int** C,int k,int size){
	if(C[k][size]!=0){
		return k;
	}
	else{
		k++;
		findK(C,k,size);
	}
}

void permutating(int* A,int** B,int** C,int size,char* sorted_text){
	int p;
	p=factorial(size);
	if(A[1]==0){
		int k=0;
		k=findK(C,k,size);
		for(int j=0;j<size-1;j++){
			C[k][j]=B[size-2][j];
		}
		C[k][size-1]=A[0];
		C[k][size]=0;
		if(k==(factorial(size)-1)){
			for(int i=0;i<p;i++){
				for(int j=0;j<size;j++){
					C[i][j]=C[i][j]-1;
				}
			}
	
			char** D;
			D=(char**)malloc(sizeof(char*)*(p+1));
			for(int i=0; i<=p; i++){
				D[i]=(char*)malloc(sizeof(char)*(size+2));
			}
	
			for(int i=0;i<p;i++){
				for(int j=0;j<size;j++){
					D[i][j]=sorted_text[C[i][j]];
				}
			}
		
			fstream file;
			file.open("C:\\Users\\owNer\\Desktop\\outputf1.txt", ios::out | ios::in);
			for(int i=0;i<p;i++){
				file<< D[i]<< endl;
			}
			file.close();
		}
	}
	else{
		int i,j;
		int d=0;
		for(j=0;j<size;j++){
			if(A[j]==0){
				d++;
			}
		}
		for(i=0;i<size-d;i++){
			for(j=d;j<size;j++){
				B[j][d]=A[i];
			}
			A=remove(A,i,size);
			permutating(A,B,C,size,sorted_text);
			A=insert(A,B[d][d],0,size);
			for(j=size-2;j>=d;j--){
				B[j][d]=0;
			}
		}
	}
}
